{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/input/macro.njk"  import govukInput %}

{% set signatoryId = (signatory.id | lower) %}
{% set fieldsetId = "signatory_" + signatoryId %}

{% set isSigningName = "isSigning_" + signatoryId %}
{% set isSigningId = "is-signing_" + signatoryId %}

{% set directorEmailName = "directorEmail_" + signatoryId %}
{% set directorEmailId = "director-email_" + signatoryId %}

{% set onBehalfNameName = "onBehalfName_" + signatoryId %}
{% set onBehalfNameId = "on-behalf-name_" + signatoryId %}

{% set onBehalfEmailName = "onBehalfEmail_" + signatoryId %}
{% set onBehalfEmailId = "on-behalf-email_" + signatoryId %}

{% set willSignSection %}
  {{
    govukInput({
      id: directorEmailId,
      name: directorEmailName,
      type: "email",
      autocomplete: "email",
      classes: "govuk-!-width-full",
      label: {
        text: "What is the email address for " + signatory.name + "?"
      },
      hint: {
        text: "We will use this email to ask them to sign the application."
      },
      errorMessage: {
        text: errors[directorEmailName]
      } if errors[directorEmailName],
      attributes: {
        spellcheck: "false"
      },
      value: data[directorEmailName] if data
    })
  }}
{% endset -%}

{% set onBehalfSection %}
  {{
    govukInput({
      id: onBehalfNameId,
      name: onBehalfNameName,
      classes: "govuk-!-width-full",
      label: {
        text: "What is the name of the person signing for " + signatory.name + "?"
      },
      errorMessage: {
        text: errors[onBehalfNameName]
      } if errors[onBehalfNameName],
      attributes: {
        spellcheck: "false"
      },
      value: data[onBehalfNameName] if data
    })
  }}

  {{
    govukInput({
      id: onBehalfEmailId,
      name: onBehalfEmailName,
      type: "email",
      autocomplete: "email",
      classes: "govuk-!-width-full",
      label: {
        text: "What is the email address of the person signing for " + signatory.name + "?"
      },
      hint: {
        text: "We will use this email to ask them to sign the application."
      },
      errorMessage: {
        text: errors[onBehalfEmailName]
      } if errors[onBehalfEmailName],
      attributes: {
        spellcheck: "false"
      },
      value: data[onBehalfEmailName] if data
    })
  }}
{% endset -%}

{{
  govukRadios({
    idPrefix: isSigningId,
    name: isSigningName,
    fieldset: {
      attributes: {
        id: fieldsetId
      },
      legend: {
        text: signatory.name,
        classes: "govuk-fieldset__legend--m"
      }
    },
    errorMessage: {
      text: errors[isSigningName]
    } if errors[isSigningName],
    items: [
      {
        value: SignatorySigning.WILL_SIGN,
        text: "Will sign",
        conditional: {
          html: willSignSection
        },
        checked: data[isSigningName] === SignatorySigning.WILL_SIGN if data
      },
      {
        value: SignatorySigning.ON_BEHALF,
        text: "Someone will sign for them",
        conditional: {
          html: onBehalfSection
        },
        checked: data[isSigningName] === SignatorySigning.ON_BEHALF if data
      }
    ]
  })
}}
